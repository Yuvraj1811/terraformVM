# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: MyAgentCI

parameters:
  - name: ScanningRequired
    displayName: Scanning Required?
    type: string
    values:
      - true
      - false

variables:
   workDir: '$(System.DefaultWorkingDirectory)'

jobs:
  - job: TerraformInitFmtValidate
    displayName: Terraform Init, Fmt, Validate job
    steps:
      - task: CmdLine@2
        inputs:
          script: 'echo Hello world'

  - job: TerraformInitPlan
    displayName: Terraform Init and Plan
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'
  
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: $(workDir)
          backendServiceArm: 'MyServerConnection1'
          backendAzureRmResourceGroupName: 'rg-backend'
          backendAzureRmStorageAccountName: 'strgaccbackend'
          backendAzureRmContainerName: 'strgcontainer'
          backendAzureRmKey: 'terraform.tfstate'

  - job: TFScanningJob
    condition: eq(${{ parameters.ScanningRequired}}, 'true')
    displayName: TFSEC Scanning Job
    pool: MyAgentCI
    steps:
      - task: tfsec@1
        inputs:
          version: 'v1.26.0'
          dir: $(workDir)

        
      
    
      
